// app.js

let dealId = null;
let exchangeRateNBU = null;
let exchangeRateDeal = null;

const rateFieldAPIName = 'Currency_Rate'; // API-—ñ–º º—è –ø–æ–ª—è –∑ –∫—É—Ä—Å–æ–º (–∑–∞–º—ñ–Ω–∏, —è–∫—â–æ –≤ —Ç–µ–±–µ —ñ–Ω—à–µ)
const nbuUrl = 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?valcode=USD&json';

document.addEventListener('DOMContentLoaded', function () {
  ZOHO.embeddedApp.on("PageLoad", function (data) {
    dealId = data.EntityId;
    if (dealId.startsWith("Deals")) {
      dealId = dealId.split("_")[1]; // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ "Deals_" –∑ ID
    }

    getExchangeRate();
  });

  ZOHO.embeddedApp.init();

  document.getElementById("update-btn").addEventListener("click", updateDealRate);
});

function getExchangeRate() {
  // 1. –û—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å –ù–ë–£
  fetch(nbuUrl)
    .then(response => response.json())
    .then(nbuData => {
      if (Array.isArray(nbuData) && nbuData.length > 0) {
        exchangeRateNBU = nbuData[0].rate;
        document.getElementById("nbu-rate").textContent = exchangeRateNBU.toFixed(2);

        // 2. –û—Ç—Ä–∏–º–∞—Ç–∏ —É–≥–æ–¥—É
        return ZOHO.CRM.API.getRecord({ Entity: "Deals", RecordID: dealId });
      } else {
        throw new Error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ù–ë–£");
      }
    })
    .then(nbuData => {
      exchangeRateNBU = nbuData[0].rate;
      document.getElementById("nbu-rate").textContent = exchangeRateNBU.toFixed(2);
    
      // üîÅ –ó–∞–º—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—É –¥–æ Zoho, —Å–∏–º—É–ª—é–π:
      const data = { Currency_Rate: 35.5 }; // –Ω–∞–ø—Ä–∏–∫–ª–∞–¥
      exchangeRateDeal = data[rateFieldAPIName] || 0;
      document.getElementById("deal-rate").textContent = exchangeRateDeal.toFixed(2);
    
      const diffPercent = ((exchangeRateDeal / exchangeRateNBU - 1) * 100).toFixed(1);
      document.getElementById("diff").textContent = `${diffPercent}%`;
    
      if (Math.abs(diffPercent) >= 5) {
        document.getElementById("update-btn").style.display = "inline-block";
      }
    
    })
    .catch(err => {
      console.error("–ü–æ–º–∏–ª–∫–∞:", err);
      document.getElementById("status").textContent = "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å.";
    });
}

function updateDealRate() {
  document.getElementById("update-btn").disabled = true;
  document.getElementById("status").textContent = "–û–Ω–æ–≤–ª–µ–Ω–Ω—è...";

  const updatePayload = {
    data: [
      {
        id: dealId,
        [rateFieldAPIName]: exchangeRateNBU
      }
    ]
  };

  ZOHO.CRM.API.updateRecord({ Entity: "Deals", APIData: updatePayload })
    .then(response => {
      if (response.data[0].code === "SUCCESS") {
        document.getElementById("status").textContent = "–ö—É—Ä—Å –æ–Ω–æ–≤–ª–µ–Ω–æ!";
        document.getElementById("update-btn").style.display = "none";
      } else {
        document.getElementById("status").textContent = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ.";
      }
    })
    .catch(err => {
      console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:", err);
      document.getElementById("status").textContent = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ.";
    });
}